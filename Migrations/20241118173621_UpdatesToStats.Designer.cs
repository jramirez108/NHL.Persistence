// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NHL.Persistence;

#nullable disable

namespace NHL.Persistence.Migrations
{
    [DbContext(typeof(NHLDbContext))]
    [Migration("20241118173621_UpdatesToStats")]
    partial class UpdatesToStats
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NHL.Persistence.Models.NHLGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("GameOverOdds")
                        .HasColumnType("longtext");

                    b.Property<float?>("GameRunLine")
                        .HasColumnType("float");

                    b.Property<string>("GameUnderOdds")
                        .HasColumnType("longtext");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.Property<string>("HomeTeamOdds")
                        .HasColumnType("longtext");

                    b.Property<string>("HomeTeamSpreadLine")
                        .HasColumnType("longtext");

                    b.Property<string>("HomeTeamSpreadOdds")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VisitorTeamId")
                        .HasColumnType("int");

                    b.Property<string>("VisitorTeamOdds")
                        .HasColumnType("longtext");

                    b.Property<string>("VisitorTeamSpreadLine")
                        .HasColumnType("longtext");

                    b.Property<string>("VisitorTeamSpreadOdds")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("VisitorTeamId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Hand")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("JerseyNumber")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PositionAbbreviation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PositionGroup")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayerOdds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Line")
                        .HasColumnType("double");

                    b.Property<string>("Over")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Under")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerOdds");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayerStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GameWinningGoals")
                        .HasColumnType("int");

                    b.Property<int>("Goals")
                        .HasColumnType("int");

                    b.Property<int>("GoalsAgainst")
                        .HasColumnType("int");

                    b.Property<bool>("IsHomeGame")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsWin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("OpposingTeamId")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyMinutes")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<string>("PlayersParticipated")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PlusMinus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("PowerPlayAssists")
                        .HasColumnType("int");

                    b.Property<int>("PowerPlayGoals")
                        .HasColumnType("int");

                    b.Property<string>("Production")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Saves")
                        .HasColumnType("int");

                    b.Property<float>("ShootingPct")
                        .HasColumnType("float");

                    b.Property<int>("ShortHandedAssists")
                        .HasColumnType("int");

                    b.Property<int>("ShortHandedGoals")
                        .HasColumnType("int");

                    b.Property<int>("ShotsAgainst")
                        .HasColumnType("int");

                    b.Property<int>("ShotsTotal")
                        .HasColumnType("int");

                    b.Property<string>("TimeOnIcePerGame")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("OpposingTeamId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayersStats");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ConferenceId")
                        .HasColumnType("int");

                    b.Property<string>("ConferenceName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLTeamStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("PerGameValue")
                        .HasColumnType("float");

                    b.Property<int>("Rank")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<float>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamStats");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLGame", b =>
                {
                    b.HasOne("NHL.Persistence.Models.NHLTeam", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NHL.Persistence.Models.NHLTeam", "VisitorTeam")
                        .WithMany()
                        .HasForeignKey("VisitorTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HomeTeam");

                    b.Navigation("VisitorTeam");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayer", b =>
                {
                    b.HasOne("NHL.Persistence.Models.NHLTeam", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayerOdds", b =>
                {
                    b.HasOne("NHL.Persistence.Models.NHLPlayer", null)
                        .WithMany("Odds")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayerStat", b =>
                {
                    b.HasOne("NHL.Persistence.Models.NHLTeam", "OpposingTeam")
                        .WithMany()
                        .HasForeignKey("OpposingTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NHL.Persistence.Models.NHLPlayer", "Player")
                        .WithMany("Stats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OpposingTeam");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLTeamStats", b =>
                {
                    b.HasOne("NHL.Persistence.Models.NHLTeam", null)
                        .WithMany("Stats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLPlayer", b =>
                {
                    b.Navigation("Odds");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("NHL.Persistence.Models.NHLTeam", b =>
                {
                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
